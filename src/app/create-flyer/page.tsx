"use client"
import { useState } from 'react';

const templates = {
  birthday: '/templates/birthday.png',
  valentine: '/templates/valentine.png',
  newyear: '/templates/newyear.png',
} as const;

type TemplateKey = keyof typeof templates;

export default function CreateCard() {
  const [message, setMessage] = useState('');
  const [template, setTemplate] = useState<TemplateKey>('birthday');

  const handleMint = () => {
    const metadata = {
      template: templates[template],
      message: message || '–ù–∞–ø–∏—à–∏ —â–æ—Å—å —Ç–µ–ø–ª–µ...',
      recipientWallet: '–ê–¥—Ä–µ—Å–∞ –≥–∞–º–∞–Ω—Ü—è –æ—Ç—Ä–∏–º—É–≤–∞—á–∞',
      createdAt: new Date().toISOString(),
    };

    alert(`–ú–µ—Ç–∞-–¥–∞–Ω—ñ –¥–ª—è –º—ñ–Ω—Ç–∞ NFT:
    –®–∞–±–ª–æ–Ω: ${metadata.template}
    –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${metadata.message}
    –ê–¥—Ä–µ—Å–∞—Ç: ${metadata.recipientWallet}
    –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è: ${metadata.createdAt}`);
  };

  return (
    <main className="min-h-screen bg-black text-white p-6">
      <h1 className="text-3xl font-bold text-pink-400 mb-6">–°—Ç–≤–æ—Ä–∏—Ç–∏ NFT-–ª–∏—Å—Ç—ñ–≤–∫—É</h1>

      <div className="grid md:grid-cols-2 gap-8">
        
        <div className="bg-gray-900 p-4 rounded-xl shadow-lg flex flex-col items-center">
          <h2 className="text-xl font-semibold mb-4">–ü—Ä–µ–≤ º—é</h2>
          <div className="relative w-full aspect-[4/5] max-w-sm border-4 border-pink-400 rounded-xl overflow-hidden bg-white">
            <img
              src={templates[template]}
              alt="Template"
              className="absolute w-full h-full object-cover"
            />
            <p className="absolute bottom-4 left-4 right-4 text-black text-lg font-bold bg-white bg-opacity-70 rounded p-2">
              {message || '–ù–∞–ø–∏—à–∏ —â–æ—Å—å —Ç–µ–ø–ª–µ...'}
            </p>
          </div>
        </div>

        
        <div className="space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-300 mb-1">–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:</label>
            <textarea
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              className="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-600"
              rows={5}
              placeholder="–ù–∞–ø–∏—à–∏ —â–æ—Å—å —Ç–µ–ø–ª–µ..."
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-1">–®–∞–±–ª–æ–Ω:</label>
            <select
              value={template}
              onChange={(e) => setTemplate(e.target.value as TemplateKey)}
              className="w-full p-3 rounded-lg bg-gray-800 text-white border border-gray-600"
            >
              <option value="birthday">üéâ –î–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è</option>
              <option value="valentine">üíñ –í–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞</option>
              <option value="newyear">üåü –ù–æ–≤–∏–π —Ä—ñ–∫</option>
            </select>
          </div>

          <button
            onClick={handleMint}
            className="bg-pink-600 hover:bg-pink-700 transition px-6 py-3 rounded-xl text-white text-lg shadow"
          >
            –°—Ç–≤–æ—Ä–∏—Ç–∏ NFT 
          </button>
        </div>
      </div>
    </main>
  );
}
